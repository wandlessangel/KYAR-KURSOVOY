@mixin respond-to($breakpoint) {
	@if $breakpoint == xs {
		@media screen and (max-width: $breakpoint-xs) {
			@content;
		}
	} @else if $breakpoint == sm {
		@media screen and (max-width: $breakpoint-sm) {
			@content;
		}
	} @else if $breakpoint == md {
		@media screen and (max-width: $breakpoint-md) {
			@content;
		}
	} @else if $breakpoint == lg {
		@media screen and (max-width: $breakpoint-lg) {
			@content;
		}
	}
}

@mixin flex(
	$direction: row,
	$justify: flex-start,
	$align: stretch,
	$wrap: nowrap
) {
	display: flex;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
	flex-wrap: $wrap;
}

@mixin center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin absolute-position($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

@mixin container {
	width: 100%;
	max-width: $container-max-width;
	margin-left: auto;
	margin-right: auto;
	padding-left: $spacing-md;
	padding-right: $spacing-md;
}

@mixin transition(
	$property: all,
	$duration: $transition-medium,
	$timing: ease
) {
	transition: $property $duration $timing;
}

@mixin box-shadow($level: 1) {
	@if $level == 1 {
		box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
	} @else if $level == 2 {
		box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
	} @else if $level == 3 {
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
	}
}

@mixin button(
	$bg-color: $primary-color,
	$text-color: $secondary-color,
	$padding: $spacing-md $spacing-lg
) {
	display: inline-block;
	background-color: $bg-color;
	color: $text-color;
	padding: $padding;
	border: none;
	border-radius: $border-radius-xl;
	font-family: $font-primary;
	cursor: pointer;
	@include transition;

	&:hover {
		opacity: 0.9;
		transform: translateY(-2px);
	}

	&:active {
		transform: translateY(0);
	}
}

@mixin clearfix {
	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin heading($size: 2rem, $weight: 400, $margin-bottom: $spacing-md) {
	font-size: $size;
	font-weight: $weight;
	margin-bottom: $margin-bottom;
	line-height: 1.2;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie);
}
